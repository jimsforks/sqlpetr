% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sp_docker_functions.R
\name{sp_pg_docker_run}
\alias{sp_pg_docker_run}
\title{Run a PostgreSQL Docker image in a container}
\usage{
sp_pg_docker_run(container_name, image_tag = "docker.io/postgres:10",
  postgres_password = "postgres", mount_here_as = NULL)
}
\arguments{
\item{container_name}{character: a valid container name for the container}

\item{image_tag}{character: a valid image tag (name) for the docker image to
run. Default is the base PostgreSQL 10 image, \code{docker.io/postgres:10}.}

\item{postgres_password}{character: the \code{postgres} database superuser
password. Default is "postgres".}

\item{mount_here_as}{character: When the image runs, the directory where the
function was called can be mounted into a path in the container, named
\code{mount_here_as}, for \strong{read/write}. Rules
for the name:
\itemize{
\item If you don't want to mount into the container, specify \code{NULL}. This is
the default!
\item The name must start with a \code{/} and be a valid absolute path.
\item The name should contain only slashes, letters, numbers and underscores.
Other characters may or may not work. The \code{snakecase} package is your
friend.}}
}
\value{
Result of Docker command if it succeeded. Stops with an error message
if it failed.
}
\description{
Creates a container and runs an image in it. The image
must be based on the \code{docker.io/postgres:10} image. It will run in the
background (\code{--detach}) and the default PostgreSQL port 5432 will be
published to \code{localhost:5432}.
}
\examples{
\dontrun{
build_log <- sp_make_dvdrental_image("test-dvdrental:latest")
sp_docker_images_tibble()
sp_pg_docker_run(
 container_name = "test-dvdrental",
 image_tag = "test-dvdrental:latest",
 postgres_password = "postgres"
)
sp_docker_containers_tibble()
}
}
